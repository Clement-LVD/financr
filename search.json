[{"path":"https://clement-lvd.github.io/financr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 financr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://clement-lvd.github.io/financr/articles/Functions_summary.html","id":"financr-overview","dir":"Articles","previous_headings":"","what":"'financr' Overview","title":"Summary of financr Functions","text":"Functions '_historic' suffix return historic financial data, others retrieve --date data latest financial insights. Table 1. Overview 'financr' Functions Sources : * : Yahoo Finance APIs, e.g., query1.finance.yahoo.com/v1/finance/currencies ; […]/v8/finance/chart query2.finance.yahoo.com/v6/finance, etc. † : Scraping https://finance.yahoo.com/lookup/ ‡ : Scraping Yahoo Finance pages, https://finance.yahoo.com/markets/world-indices/ […]/markets/crypto, etc. Standardized Return Conventions. Regarding data.frame returned 'financr' functions: column names : following ‘snake_case’ conventions, e.g., lowercase without spaces; symbols replaced (e.g., “%’ replaced ‘percent’); Regarding values : Numeric values returned integer numeric class values.","code":""},{"path":"https://clement-lvd.github.io/financr/articles/Functions_summary.html","id":"financr-specifics","dir":"Articles","previous_headings":"","what":"'financr' Specifics","title":"Summary of financr Functions","text":"Role financr ‘Reach Yahoo Finance’ ecosystem. 'financr' retrieves data Yahoo Finance make assumptions visualizations analyses performed financial data. Consequently, financr dependencies kept low. R packages retrieves data source 'financr', .e. Yahoo Finance. E.g., 'yahoofinancer', 'quantmod' packages depends yfr stocks (depends 'quantmod'). Regarding fetching historical financial values Yahoo Finance, returned objects packages different properties, see . Table 2. 'financr' get_historic() Alternatives Returned Values functions offered packages sometimes less equivalent (e.g., financr::valid_symbol()) whereas functions specific one packages. E.g., 'financr' offer free-text search financr::get_info_from_name(), 'quantmod' offers financial data-analysis oriented functions time series data visualization methods. packages derivated 2 examples, e.g., rely quantmod ans.","code":""},{"path":"https://clement-lvd.github.io/financr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clément Laverdet. Author, maintainer.","code":""},{"path":"https://clement-lvd.github.io/financr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Laverdet C (2025). financr: Retrieve Financial Data Yahoo Finance. R package version 0.2.0, https://clement-lvd.github.io/financr/, https://github.com/clement-LVD/financr.","code":"@Manual{,   title = {financr: Retrieve Financial Data From Yahoo Finance},   author = {Clément Laverdet},   year = {2025},   note = {R package version 0.2.0,     https://clement-lvd.github.io/financr/},   url = {https://github.com/clement-LVD/financr}, }"},{"path":"https://clement-lvd.github.io/financr/index.html","id":"financr","dir":"","previous_headings":"","what":"Retrieve Financial Data From Yahoo Finance","title":"Retrieve Financial Data From Yahoo Finance","text":"  'financr' retrieves financial data Yahoo Finance. Get historical market data (e.g., market prices, currencies exchange rates) ; Get latest insights companies, financial symbols, major indices, currencies crypto-currencies exchanges rates ; Convert currencies crypto-currencies latest exchange rates. See Vignette ‘Summary financr Functions’.","code":""},{"path":"https://clement-lvd.github.io/financr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieve Financial Data From Yahoo Finance","text":"can install development version financr:","code":"devtools::install_github(\"clement-LVD/financr\")"},{"path":"https://clement-lvd.github.io/financr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Retrieve Financial Data From Yahoo Finance","text":"Get ticker symbol actual values. Given keyword(s) companies names, search latest stock values financr::get_info_from_name(). don’t know ticker symbol financial value, exploring results financr::get_info_from_name() way find . Get historical financial data. Given ticker symbol(s), get historic financial values financr::get_historic() : lines data.frame daily values.","code":"library(financr)  swed_indices <- get_info_from_name(names = c(\"SAAB\", \"VOLVO\"))  str(swed_indices) # Results of the day, over all marketplaces #> 'data.frame':    41 obs. of  7 variables: #>  $ symbol    : chr  \"SAAB-B.ST\" \"SDV1.F\" \"SAABBS.XC\" \"SAABF\" ... #>  $ name      : chr  \"SAAB AB ser. B\" \"Saab AB                       N\" \"Saab AB\" \"Saab AB\" ... #>  $ last price: chr  \"403.75\" \"37.11\" \"386.33\" \"39.71\" ... #>  $ sector    : chr  \"Industrials\" \"Industrials\" \"Industrials\" \"Industrials\" ... #>  $ type      : chr  \"Stocks\" \"Stocks\" \"Stocks\" \"Stocks\" ... #>  $ exchange  : chr  \"STO\" \"FRA\" \"CXE\" \"PNK\" ... #>  $ searched  : chr  \"SAAB\" \"SAAB\" \"SAAB\" \"SAAB\" ... #>  - attr(*, \"date\")= Date[1:1], format: \"2025-04-02\" #>  - attr(*, \"crypto\")= logi FALSE # Fetch historical values, given ticker symbol(s) histo <- get_historic(symbols = c(\"SAAB-B.ST\", \"VOLV-B.ST\"), .verbose = FALSE)  str(histo) #> 'data.frame':    1020 obs. of  14 variables: #>  $ open            : num  390 386 385 388 388 ... #>  $ close           : num  386 385 387 388 390 ... #>  $ low             : num  386 385 385 387 388 ... #>  $ high            : num  391 387 387 388 390 ... #>  $ volume          : int  0 43690 19282 25525 18380 27971 12996 3797 2652 10832 ... #>  $ timestamp       : int  1743490800 1743490860 1743490920 1743490980 1743491040 1743491100 1743491160 1743491220 1743491280 1743491340 ... #>  $ date            : POSIXct, format: \"2025-04-01 09:00:00\" \"2025-04-01 09:01:00\" ... #>  $ currency        : chr  \"SEK\" \"SEK\" \"SEK\" \"SEK\" ... #>  $ symbol          : chr  \"SAAB-B.ST\" \"SAAB-B.ST\" \"SAAB-B.ST\" \"SAAB-B.ST\" ... #>  $ shortname       : chr  \"SAAB AB ser. B\" \"SAAB AB ser. B\" \"SAAB AB ser. B\" \"SAAB AB ser. B\" ... #>  $ longname        : chr  \"Saab AB (publ)\" \"Saab AB (publ)\" \"Saab AB (publ)\" \"Saab AB (publ)\" ... #>  $ exchangename    : chr  \"STO\" \"STO\" \"STO\" \"STO\" ... #>  $ fullexchangename: chr  \"Stockholm\" \"Stockholm\" \"Stockholm\" \"Stockholm\" ... #>  $ timezone        : chr  \"CEST\" \"CEST\" \"CEST\" \"CEST\" ... #>  - attr(*, \"n.currencies\")= int 1 #>  - attr(*, \"currencies\")= chr \"SEK\" #>  - attr(*, \"date\")= Date[1:1], format: \"2025-04-02\" #>  - attr(*, \"crypto\")= logi FALSE"},{"path":"https://clement-lvd.github.io/financr/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Retrieve Financial Data From Yahoo Finance","text":"Change currencies current exchange rates get historic exchange rates. See Vignette get_changes() get_currencies(). Get latest financial values insights major world-indices crypto-currencies. See vignette get_indices() get_crypto(). Cascading functionnality. 'financr' offer possibility chain process, e.g., get ticker symbol latest insights keyword(s) company names, get financial historic associated ticker symbol, finally convert values given standardized currency, e.g., ‘USD’. See vignette get_info_from_names() get_historic().","code":""},{"path":"https://clement-lvd.github.io/financr/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Retrieve Financial Data From Yahoo Finance","text":"package retrieves data Yahoo Finance, property Yahoo Inc. Users must comply Yahoo Finance’s API terms. See informations legal Vignette.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/construct_financial_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Attributes for a Financial Data Frame — construct_financial_df","title":"Construct Attributes for a Financial Data Frame — construct_financial_df","text":"internal function constructs assigns specific attributes financial data frame, providing metadata contents.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/construct_financial_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Attributes for a Financial Data Frame — construct_financial_df","text":"","code":"construct_financial_df(df, crypto = F, ...)"},{"path":"https://clement-lvd.github.io/financr/reference/construct_financial_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Attributes for a Financial Data Frame — construct_financial_df","text":"df data.frame function compute statistics column (available) currency column crypto logical Attribute predefined cryptocurrencies dataset","code":""},{"path":"https://clement-lvd.github.io/financr/reference/construct_financial_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Attributes for a Financial Data Frame — construct_financial_df","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":[]},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Exchange Rates For Devises — get_changes","title":"Get Latest Exchange Rates For Devises — get_changes","text":"Returns data.frame latest exchange rate(s) given currencies. Default convert USD ($).","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Exchange Rates For Devises — get_changes","text":"","code":"get_changes(from = NULL, to = \"USD\", .verbose = T, ...)"},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Exchange Rates For Devises — get_changes","text":", default = NULL character string representing base currency (e.g., \"USD\"). user must provide values one following method : passing paired character list, e.g., c(\"EUR\" = \"USD\", \"RON\" = \"EUR\") ; passing one several values : associated single value, e.g., = c('EUR', \"RON\"), = \"USD\" associated list values length, e.g., = c('EUR', \"RON\"), = c(\"USD\", \"EUR\") . , default = \"USD\" character string representing target currencies, e.g., c(\"EUR\", \"USD\"). .verbose logical TRUE, messages displayed, e.g., invalid symbols detected. Default FALSE. ... parameters passed get_a_change - internal mecanism get_changes_historic","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Exchange Rates For Devises — get_changes","text":"returned dataframe contains daily exchange rates, following columns: currency character, base currency. symbol character, Yahoo Finance symbol (e.g., \"EURUSD=X\"). exchange_name character, exchange place name, .e. 'CCY' currencies. fullexchange_name character, full exchange place name, supposed 'CCY' currencies. intrumenttype character, type financial instrument, supposed 'CURRENCY'. firsttradedate POSIXct, oldest date available Yahoo Finance API exchange rates historic. regularmarketprice numeric, latest market price. regularmarketdayhigh numeric, market highest price day. regularmarketdaylow numeric, market lowest price day. fifty_two_week_high numeric, highest price last 52 weeks. fifty_two_week_low numeric, lowest price last 52 weeks. previous_close numeric, last closing price. timezone character, market's timezone. date POSIXct Date observation. character, currency converted another, e.g., value 1$ ('USD'), want receive certain amount currency reach 1$. character, currency want convert : numeric values (integer) line data.frame expressed currency. timestamp int, timestamp rate. rate.high Numeric, highest exchange rate day. rate.low Numeric, lowest exchange rate day. rate.open Numeric, opening exchange rate day. rate.volume Numeric, trading volume day. rate.close Numeric, closing exchange rate day. timestamp POSIXct, corresponding date (YYYY-MM-DD).","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Latest Exchange Rates For Devises — get_changes","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Latest Exchange Rates For Devises — get_changes","text":"Source : https://query1.finance.yahoo.com/v8/finance/chart/","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Latest Exchange Rates For Devises — get_changes","text":"","code":"# Fetch exchange historical data from € and ¥ to $ (default convert to 'USD\") df <- get_changes(from = c(\"EUR\", \"JPY\")) str(df) #> 'data.frame':\t2 obs. of  39 variables: #>  $ currency            : chr  \"USD\" \"USD\" #>  $ symbol              : chr  \"EURUSD=X\" \"JPYUSD=X\" #>  $ exchangename        : chr  \"CCY\" \"CCY\" #>  $ fullexchangename    : chr  \"CCY\" \"CCY\" #>  $ instrumenttype      : chr  \"CURRENCY\" \"CURRENCY\" #>  $ firsttradedate      : POSIXct, format: \"2003-12-01\" \"1996-10-30\" #>  $ hasprepostmarketdata: logi  FALSE FALSE #>  $ gmtoffset           : int  3600 3600 #>  $ timezone            : chr  \"BST\" \"BST\" #>  $ exchangetimezonename: chr  \"Europe/London\" \"Europe/London\" #>  $ regularmarketprice  : num  1.0796 0.0067 #>  $ fiftytwoweekhigh    : num  1.1212 0.0072 #>  $ fiftytwoweeklow     : num  1.0184 0.0062 #>  $ regularmarketdayhigh: num  1.0811 0.0067 #>  $ regularmarketdaylow : num  1.0789 0.0067 #>  $ regularmarketvolume : int  0 0 #>  $ longname            : chr  \"EUR/USD\" \"JPY/USD\" #>  $ shortname           : chr  \"EUR/USD\" \"JPY/USD\" #>  $ chartpreviousclose  : num  1.0798 0.0067 #>  $ previousclose       : num  1.0798 0.0067 #>  $ scale               : int  4 4 #>  $ pricehint           : int  4 4 #>  $ datagranularity     : chr  \"1m\" \"1m\" #>  $ range               : chr  \"1d\" \"1d\" #>  $ pre_timezone        : chr  \"BST\" \"BST\" #>  $ pre_start           : POSIXct, format: \"2025-04-01 23:00:00\" \"2025-04-01 23:00:00\" #>  $ pre_end             : POSIXct, format: \"2025-04-01 23:00:00\" \"2025-04-01 23:00:00\" #>  $ pre_gmtoffset       : int  3600 3600 #>  $ regular_timezone    : chr  \"BST\" \"BST\" #>  $ regular_start       : POSIXct, format: \"2025-04-01 23:00:00\" \"2025-04-01 23:00:00\" #>  $ regular_end         : POSIXct, format: \"2025-04-02 22:59:00\" \"2025-04-02 22:59:00\" #>  $ regular_gmtoffset   : int  3600 3600 #>  $ post_timezone       : chr  \"BST\" \"BST\" #>  $ post_start          : POSIXct, format: \"2025-04-02 22:59:00\" \"2025-04-02 22:59:00\" #>  $ post_end            : POSIXct, format: \"2025-04-02 22:59:00\" \"2025-04-02 22:59:00\" #>  $ post_gmtoffset      : int  3600 3600 #>  $ from                : chr  \"EUR\" \"JPY\" #>  $ to                  : chr  \"USD\" \"USD\" #>  $ timestamp           : POSIXct, format: \"2025-04-02 07:02:14\" \"2025-04-02 07:02:37\" #>  - attr(*, \"n.currencies\")= int 3 #>  - attr(*, \"currencies\")= chr [1:3] \"EUR\" \"JPY\" \"USD\" #>  - attr(*, \"exchange\")= chr [1:2] \"EUR => USD\" \"JPY => USD\" #>  - attr(*, \"date\")= Date[1:1], format: \"2025-04-02\" #>  - attr(*, \"crypto\")= logi FALSE # or pass a named list of character df2 <- get_changes(from = c(\"EUR\" = \"RON\", \"USD\" = \"EUR\")) # Or pass paired values as 2 list (equivalent to hereabove line) : same_as_df2 <- get_changes(from = c(\"EUR\", \"USD\"), to =c(\"RON\" , \"EUR\"))"},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Historic of Exchange Rates For Devises — get_changes_historic","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"Get data.frame historical values exchanges rates, given currencies exchange. Default parameters return period 1 year (1 obs. per day) convert USD.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"","code":"get_changes_historic(   from = NULL,   to = \"USD\",   interval = \"1d\",   range = \"1y\",   .verbose = T )"},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"default = NULL character string representing base currency (e.g., \"USD\"). user must provide values one following method : passing paired character list, e.g., c(\"EUR\" = \"USD\", \"RON\" = \"EUR\") ; passing one several values : associated single value, e.g., = c('EUR', \"RON\"), = \"USD\" associated list values length, e.g., = c('EUR', \"RON\"), = c(\"USD\", \"EUR\") . default = \"USD\" character string representing target currencies, e.g., c(\"EUR\", \"USD\"). interval character, default = \"1d\". interval 2 rows time.series answered range character, default = \"1y\". period covered time series. .verbose logical TRUE, messages displayed, e.g., invalid symbols detected. Default FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"data.frame containing historical exchanges rates given period (default daily results year). columns : timestamp POSIXct opening price period (default day). close numeric closing price period (default day). high numeric lowest price period (default day). low numeric highest price period (default day). open integer traded volume. character, currency converted another, e.g., value 1$ ('USD'), want receive certain amount currency reach 1$. character, currency want convert : numeric values (integer) line data.frame expressed currency. Depending desired interval, recent observation truncated, e.g., '5y' range  '1d' interval answer approximately 30 days values 5 years ago.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"pair '' '' currency, returns data.frame historical exchanges rates given period (default daily results year)","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"Source : https://query1.finance.yahoo.com/v8/finance/chart/","code":""},{"path":[]},{"path":"https://clement-lvd.github.io/financr/reference/get_changes_historic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Historic of Exchange Rates For Devises — get_changes_historic","text":"","code":"# 1. Define currencies to exchange with the syntax of get_changes(). # Default convert to 'USD\" # e.g., get exchange historical data of exchanges rates from € and ¥ to $ : df_days <- get_changes_historic(from = c(\"EUR\", \"JPY\")) # Or pass a named list of character df2_days <- get_changes_historic(from = c(\"EUR\" = \"RON\", \"USD\" = \"EUR\")) # Or pass paired values as 2 list (equivalent to hereabove line) : same_as_df2_days <- get_changes(from = c(\"EUR\", \"USD\"), to =c(\"RON\" , \"EUR\")) # Default answer is a `data.frame` with  1 obs. per day for 1 year  # 2. Tweak the time.series with the parameters interval and range : df_month <- get_changes_historic(from = c(\"EUR\", \"JPY\"), interval = \"1mo\", range = '5y') # It's 1 obs. per month for a 5-years period"},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"Return data.frame latest financial data 100 cryptocurrencies, e.g., actual values cryptocurrency USD.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"","code":"get_crypto(keep = NULL, .verbose = T)"},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"keep character vector symbols filter results. NULL (default), filtering applied, available indices returned. .verbose logical, default = TRUE. TRUE, send messages console necessary.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"data frame 100 observations 13 variables: symbol character - Cryptocurrency ticker symbol. name character - Name cryptocurrency, along quoted 'real-world' currency. price numeric - Current price cryptocurrency USD ($). change numeric - Absolute price change USD since last closing exchange place. change_percent numeric - Percentage price change since last closing exchange place (%). market_cap numeric - Total market capitalization cryptocurrency. volume numeric - 24-hour trading volume. volume_in_currency_24hr numeric - 24-hour trading volume associated 'real-world' currency (time redundant volume column). total_volume_all_currencies_24hr numeric - 24-hour total trading volume across currency pairs. circulating_supply numeric - Total circulating supply cryptocurrency. X52_wk_change_percent numeric - Percentage change price last 52 weeks (%). character, currency converted another, e.g., value 1$ ('USD'), want receive certain amount currency reach 1$. character, currency want convert : numeric values (integer) line data.frame expressed currency.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"Source : Yahoo Finance 'crypto' page, https://finance.yahoo.com/markets/crypto//","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Latest Cryptocurrencies Values (USD) and Market Data — get_crypto","text":"","code":"krypto <- get_crypto() head(krypto) #>     symbol            name        price     change change_percent  market_cap #> 1  BTC-USD     Bitcoin USD 84134.930000 669.260000           0.80 1.67000e+12 #> 2  ETH-USD    Ethereum USD  1854.660000  -4.190000          -0.23 2.23787e+11 #> 3 USDT-USD Tether USDt USD     0.999943   0.000064           0.01 1.44026e+11 #> 4  XRP-USD         XRP USD     2.074700  -0.025000          -1.19 1.20760e+11 #> 5  BNB-USD         BNB USD   599.230000 -11.050000          -1.81 8.53730e+10 #> 6  SOL-USD      Solana USD   124.110000  -2.460000          -1.95 6.36050e+10 #>       volume volume_in_currency_24hr total_volume_all_currencies_24hr #> 1 2.9019e+10              2.9019e+10                       2.9019e+10 #> 2 1.5163e+10              1.5163e+10                       1.5163e+10 #> 3 6.0297e+10              6.0297e+10                       6.0297e+10 #> 4 4.1350e+09              4.1350e+09                       4.1350e+09 #> 5 2.1630e+09              2.1630e+09                       2.1630e+09 #> 6 3.0340e+09              3.0340e+09                       3.0340e+09 #>   circulating_supply X52_wk_change_percent from  to #> 1        1.98450e+07                 25.11  BTC USD #> 2        1.20662e+08                -44.93  ETH USD #> 3        1.44034e+11                 -0.05 USDT USD #> 4        5.82060e+10                263.51  XRP USD #> 5        1.42472e+08                  7.66  BNB USD #> 6        5.12504e+08                -32.69  SOL USD"},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Currencies Names And Symbols — get_currencies","title":"Get Currencies Names And Symbols — get_currencies","text":"Return data.frame financial indices (currencies) Yahoo Finance. Optionally, can filter results, given vector symbols, e.g., 'EUR'.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Currencies Names And Symbols — get_currencies","text":"","code":"get_currencies(keep = NULL, .verbose = T)"},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Currencies Names And Symbols — get_currencies","text":"keep character vector symbols filter results. NULL (default), filtering applied, available indices returned. .verbose logical, default = TRUE. TRUE, send messages console necessary.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Currencies Names And Symbols — get_currencies","text":"data frame containing unique financial indices (currencies). table columns like symbol, name, relevant information, column names lowercase. keep specified, matching indices returned.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Currencies Names And Symbols — get_currencies","text":"Source : https://query1.finance.yahoo.com/v1/finance/currencies","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_currencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Currencies Names And Symbols — get_currencies","text":"","code":"# Fetch all available indices all_indices <- get_currencies()  # Fetch only specific indices selected_indices <- get_currencies(keep = c(\"USD\", \"EUR\"))"},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Historical Financial Data Indices — get_historic","title":"Get Historical Financial Data Indices — get_historic","text":"Get historic stock market data financial ticker symbols, e.g., values closing day.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Historical Financial Data Indices — get_historic","text":"","code":"get_historic(symbols = c(\"SAAB-B.ST\"), wait.time = 0, .verbose = T, ...)"},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Historical Financial Data Indices — get_historic","text":"symbols character character string representing financial indices search , e.g., ticker symbol(s). wait.time double, default = 0 character string representing additional waiting time 2 calls Yahoo API. .verbose logical, default = TRUE. TRUE, send messages console. ... Arguments passed get_yahoo_data symbol character character string representing symbol financial instrument (e.g., \"AAPL\" Apple). start_date character character string representing start date format \"YYYY-MM-DD\". NULL, data starts 1970-01-01. end_date character character string representing end date format \"YYYY-MM-DD\". NULL, data retrieved current date. range character character string representing range returned datas : default return daily values. add_dividends_and_splits default = TRUE - Add insights dividends","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Historical Financial Data Indices — get_historic","text":"data frame containing historical financial data following columns: open numeric opening price period (default day). close numeric closing price period (default day). low numeric lowest price period (default day). high numeric highest price period (default day). volume integer traded volume. timestamp integer Unix timestamps corresponding data point. date POSIXct day financial data point. currency character currency data reported, depending marketplace. symbol character stock financial instrument symbol (e.g., \"AAPL\"). shortname character abbreviated name company financial instrument. longname character full name company financial instrument. exchangename character name exchange marketplace financial instrument listed. fullexchangename character full name exchange marketplace. timezone character timezone data reported. gmtoffset integer UNIX timestamp difference market local time GMT time. regularMarketPrice numeric actual price market open, last closing price . fiftyTwoWeekLow numeric  Lowest price last 52 weeks. fiftyTwoWeekHigh numeric Highest price last 52 weeks. regularMarketDayHigh numeric highest price day (local exchange place day). regularMarketDayLow numeric  lowest price day (local exchange place day).","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Historical Financial Data Indices — get_historic","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Historical Financial Data Indices — get_historic","text":"Source : https://query1.finance.yahoo.com/v8/finance/chart/","code":""},{"path":[]},{"path":"https://clement-lvd.github.io/financr/reference/get_historic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Historical Financial Data Indices — get_historic","text":"","code":"datas <- get_historic(symbols = c(\"VOLCAR-B.ST\", \"SAAB-B.ST\") ) #>    VOLCAR-B.ST [OK]                                                                                                       SAAB-B.ST [OK]"},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get World Financial Indices Latest Values (USD) — get_indices","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"Get latest stock market indices values data 40 world-indices, e.g., latest prices, change percentage change.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"","code":"get_indices(.verbose = T, keep = NULL)"},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":".verbose logical, default = TRUE. TRUE, send messages console necessary. keep character vector symbols filter results. NULL (default), filtering applied, available indices returned.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"data frame following columns: symbol character - Ticker symbol index, aka world indices (e.g., ^GSPC S&P 500). name character -  Full name index (e.g., \"S&P 500\"). price numeric - Current value index (USD). change numeric - Absolute change index value since last closing exchange place. change_percent numeric - Percentage change index value since last closing exchange place. volume numeric - total trading volume index components. currency character - Currency associated world-indice, .e. 'USD'.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"Source : Yahoo's world indices page, https://finance.yahoo.com/markets/world-indices","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get World Financial Indices Latest Values (USD) — get_indices","text":"","code":"if (FALSE) { # \\dontrun{ indices <- get_indices() head(indices) } # }"},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"Get latest overall insights ticker symbols associated free texts, companies names. Several ticker symbols associated various exchanges places returned, , companies names, last price marketplace, sector/category (available), etc.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"","code":"get_info_from_name(names, exchange = NULL, sector = NULL)"},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"names character string representing company name search . exchange (optionnal) character string representing exchange place(s) consider (exact match). Default keep exchange places. sector (optionnal)  character string representing sector(s) consider (exact match). Default keep results.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"data frame columns: - symbol: stock ticker symbol yahoo - name: full company name. - last_price: latest available price. - sector: sector industry category (available). - type: type asset (certainly \"stocks\"). - exchange: stock exchange place stock. searched: original names searched","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"Return data.frame additionnal attributes: n.currencies integer - Number unique currencies data.frame. currencies character - vector currency symbols data.frame (e.g., \"BTC\", \"ETH\", \"USD\"). exchange character - vector exchange pairs (e.g., \"BTC => USD\"). applicable, NULL (entry). date Date - date data retrieved, set using Sys.Date(). crypto logical - TRUE cryptocurrencies present, otherwise FALSE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"Source : search https://finance.yahoo.com/lookup/","code":""},{"path":[]},{"path":"https://clement-lvd.github.io/financr/reference/get_info_from_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Latest Financial Information and Ticker Symbol From Company Name(s) — get_info_from_name","text":"","code":"oil <- get_info_from_name(names = c(\"TOTAL\", \"SHELL\", \"BP\"), sector = \"Energy\") #Get data on marketplace(s) swedish <- get_info_from_name(names = c(\"SAAB\", \"VOLVO\"),  exchange = c(\"STO\", \"PAR\"))"},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"Get historical financial values associated ticker symbol. data includes open stock price, high, low, close, volume, along timestamps.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"","code":"get_yahoo_data(   symbol = \"AAPL\",   start_date = NULL,   end_date = NULL,   range = \"1d\",   add_dividends_and_splits = TRUE,   .verbose = T )"},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"symbol character character string representing symbol financial instrument (e.g., \"AAPL\" Apple). start_date character character string representing start date format \"YYYY-MM-DD\". NULL, data starts 1970-01-01. end_date character character string representing end date format \"YYYY-MM-DD\". NULL, data retrieved current date. range character character string representing range returned datas : default return daily values. add_dividends_and_splits default = TRUE - Add insights dividends .verbose logical TRUE, messages displayed, e.g., invalid symbols detected.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"data frame containing historical financial data following columns: open numeric opening price period (default day). close numeric closing price period (default day). low numeric lowest price period (default day). high numeric highest price period (default day). volume integer traded volume. timestamp integer Unix timestamps corresponding data point. date POSIXct day financial data point. currency character currency data reported, depending marketplace. symbol character stock financial instrument symbol (e.g., \"AAPL\"). shortname character abbreviated name company financial instrument. longname character full name company financial instrument. exchangename character name exchange marketplace financial instrument listed. fullexchangename character full name exchange marketplace. timezone character timezone data reported. gmtoffset integer UNIX timestamp difference market local time GMT time. regularMarketPrice numeric actual price market open, last closing price . fiftyTwoWeekLow numeric  Lowest price last 52 weeks. fiftyTwoWeekHigh numeric Highest price last 52 weeks. regularMarketDayHigh numeric highest price day (local exchange place day). regularMarketDayLow numeric  lowest price day (local exchange place day).","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"default data.frame line day. user provide another range '1d' (one day), lines filtered , order match desired range. Valid ranges : \"1d\", \"5d\", \"1mo\", \"3mo\", \"6mo\", \"1y\", \"2y\", \"5y\", \"10y\", \"ytd\", \"max\". function allows user specify date range using start end dates. date range specified, retrieves available data beginning time (default start) current date (default end).","code":""},{"path":"https://clement-lvd.github.io/financr/reference/get_yahoo_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Historical Financial Data For a Given Symbol — get_yahoo_data","text":"Source : https://query1.finance.yahoo.com/v8/finance/chart/","code":""},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Financial Symbols — valid_symbol","title":"Validate Financial Symbols — valid_symbol","text":"function checks validity one multiple financial symbols using Yahoo Finance's validation API. returns table boolean values indicating whether symbol recognized Yahoo Finance.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Financial Symbols — valid_symbol","text":"","code":"valid_symbol(symbols = NULL, ..., .verbose = T)"},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Financial Symbols — valid_symbol","text":"symbols character string list character strings representing financial symbols validate. ... symbols (char. list char.) .verbose logical TRUE, messages displayed invalid symbols detected. Default TRUE.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Financial Symbols — valid_symbol","text":"boolean table one row many columns number unique symbols provided user. column corresponds symbol, TRUE Yahoo Finance recognizes symbol, FALSE otherwise.","code":""},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Validate Financial Symbols — valid_symbol","text":"Source : https://query2.finance.yahoo.com/v6/finance/quote/validate","code":""},{"path":"https://clement-lvd.github.io/financr/reference/valid_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Financial Symbols — valid_symbol","text":"","code":"valid_symbol(\"AAPL,GOOGL\") #>   GOOGL AAPL #> 1  TRUE TRUE valid_symbol(symbols = c(\"AAPL\", \"GOOGL\", \"INVALID\")) #> Invalid financial symbol(s) : INVALID #>   AAPL GOOGL INVALID #> 1 TRUE  TRUE   FALSE"}]
