% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_changes.R
\name{get_changes}
\alias{get_changes}
\title{Get Latest Exchange Rates For Devises}
\usage{
get_changes(from = NULL, to = "USD", .verbose = T, ...)
}
\arguments{
\item{from, }{default = \code{NULL} A character string representing the base currency (e.g., "USD").
The user must provide \code{from} values with one of the following method :
\itemize{
\item passing a paired character list, e.g., c("EUR" = "USD", "RON" = "EUR") ;
\item or passing one or several \code{from} values :
\itemize{
\item associated with a single \code{to} value, e.g., \verb{from = c('EUR', "RON"), to = "USD"}
\item or associated with a list of \code{from} values of the same length, e.g., \verb{from = c('EUR', "RON"), to = c("USD", "EUR")} .
}
}}

\item{to, }{default = \code{"USD"} A character string representing the target currencies, e.g., \code{c("EUR", "USD")}.}

\item{.verbose}{\code{logical} If TRUE, messages are displayed, e.g., when invalid symbols are detected. Default is FALSE.}

\item{...}{Other parameters passed to get_a_change - internal mecanism for get_changes_historic}
}
\value{
The returned dataframe contains daily exchange rates, and the following columns:
\describe{
\item{currency}{\code{character} - The base currency.}
\item{symbol}{\code{character} - The Yahoo Finance symbol (e.g., "EURUSD=X").}
\item{exchangename}{\code{character} - The exchange place name, i.e. 'CCY' for currencies.}
\item{intrumenttype}{\code{character} - The type of financial instrument, supposed to be 'CURRENCY'.}
\item{firsttradedate}{\code{POSIXct} - The oldest date available on the Yahoo Finance API for an exchange rates historic.}
\item{gmtoffset}{\code{numeric} - The difference with GMT time (seconds).}
\item{timezone}{\code{character} - The market's timezone.}
\item{exchangetimezonename}{\code{character} - The name of the market's timezone, e.g., 'Europe/London'.}
\item{regularmarketprice}{\code{numeric} - The latest market price.}
\item{regularmarketdayhigh}{\code{numeric} - The market highest price of this day.}
\item{regularmarketdaylow}{\code{numeric} - The market lowest price of this day.}
\item{fiftytwoweekhigh}{\code{numeric} - The highest price in the last 52 weeks.}
\item{fiftytwoweeklow}{\code{numeric} - The lowest price in the last 52 weeks.}
\item{previousclose}{\code{numeric} - The last closing price.}
\item{regular_timezone}{\code{character} - The regular market's timezone.}
\item{from}{\code{character} - The currency converted into another, e.g., if the \code{from} value is 1$ ('USD'), you want to receive a certain amount of the other currency to reach 1$.}
\item{to}{\code{character} - The currency that you want to convert into : \strong{all the \code{numeric} values (not \code{integer}) of the row are expressed with this currency}.}
\item{timestamp}{\code{POSIXct} - The corresponding date (YYYY-MM-DD).}
}
}
\description{
Returns a \code{data.frame} with the latest exchange rate(s) for the given currencies. Default will convert to USD ($).
}
\details{
Return a \code{data.frame} with additionnal attributes:
\describe{
\item{n.currencies}{\code{integer} - Number of unique currencies in the \code{data.frame}.}
\item{currencies}{\code{character} - A vector of currency symbols in the \code{data.frame} (e.g., \code{"BTC"}, \code{"ETH"}, \code{"USD"}).}
\item{exchange}{\code{character} - A vector of exchange pairs (e.g., \code{"BTC => USD"}). If not applicable, \code{NULL} (no entry).}
\item{date.fetch}{\code{Date} - The date when the data was retrieved, set using \code{Sys.Date()}.}
\item{crypto}{\code{logical} - \code{TRUE} if cryptocurrencies are present, otherwise \code{FALSE}.}
\item{date.begin}{\code{POSIXct} - The oldest obs. in the dataset.}
\item{date.end}{\code{POSIXct} - The most recent date in the dataset.}
\item{date.dif}{\code{numeric} & \code{difftime} - The number of seconds between date.begin and date.end.}
}
}
\examples{
# Latest exchange rates from € and ¥ to $ (default convert to 'USD")
df <- get_changes(from = c("EUR", "JPY"))
str(df)
# User could pass a named list of character
df2 <- get_changes(from = c("EUR" = "RON", "USD" = "EUR"))
# Or pass paired values as 2 list (equivalent to hereabove line) :
same_as_df2 <- get_changes(from = c("EUR", "USD"), to =c("RON" , "EUR"))
}
\references{
Source : https://query2.finance.yahoo.com/v8/finance/chart/
}
\seealso{
For more details see the help vignette:
\code{vignette("currencies", package = "financr"))}
}
